name: Test Builds on Windows

on: [workflow_dispatch]

jobs:
  build-set-windows:
    runs-on: windows-2022

    steps:
    - name: Checkout code
      id: checkout-code
      uses: actions/checkout@v3
      with:
        submodules: recursive
        
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.0.2
      with:
        msbuild-version: '16.0'

    - name: Setup glslangValidator
      shell: pwsh
      run: |
        choco install vulkan-sdk -y
        Write-Output "$([System.Environment]::GetEnvironmentVariable('VULKAN_SDK', 'Machine'))\Bin" `
          | Out-File -FilePath "${Env:GITHUB_PATH}" -Append

    - name: Setup Meson
      shell: pwsh
      run: pip install meson

    - name: Find Visual Studio
      shell: pwsh
      run: |
        $installationPath = Get-VSSetupInstance `
          | Select-VSSetupInstance -Require Microsoft.VisualStudio.Workload.NativeDesktop -Latest `
          | Select-Object -ExpandProperty InstallationPath
        Write-Output "VSDEVCMD=${installationPath}\Common7\Tools\VsDevCmd.bat" `
          | Out-File -FilePath "${Env:GITHUB_ENV}" -Append

    - name: Build
      shell: pwsh
      run: |
        Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process
        .\build_dxvk_all_ninja.ps1
        
    - name: Build dxvk_rt.sln
      shell: pwsh
      working-directory: _vs
      run: |
        ${Env:VSDEVCMD} > $null
        msbuild.exe dxvk_rt.sln /t:Rebuild /p:Configuration=Release /p:Platform=x64

    - name: Zip binaries
      run: Compress-Archive -LiteralPath '_vs/x64' -DestinationPath 'dxvk_rt-binaries.zip'
    
    - name: Upload binaries
      uses: actions/upload-artifact@v2
      with:
        name: dxvk_rt-binaries
        path: dxvk_rt-binaries.zip
